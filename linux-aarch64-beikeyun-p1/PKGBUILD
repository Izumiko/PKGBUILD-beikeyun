# AArch64 multi-platform
# PKGBUILD Maintainer: Izumiko <yosoro@outlook.com>

_debver=19.11.3.346
_kv=4.4.198
_kernver=${_kv}-rockchip64
_imagename=linux-image-legacy-rockchip64_${_debver}_arm64.deb
_kernelname=vmlinux

pkgname=linux-aarch64-beikeyun-p1
pkgver=${_kv}
pkgrel=1
pkgdesc="The Linux Kernel and modules - AArch64 for Beikeyun P1. This package will fetch a Debian built kernel from armbian."
arch=('aarch64')
url="https://beta.armbian.com/pool/main/l/linux-${_kv}-rockchip64/"
license=('GPL')
options=('!strip')
depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
optdepends=('uboot-tools')
provides=("linux=${pkgver}" "linux-aarch64=${pkgver}")
conflicts=('linux' 'linux-aarch64' 'linux-aarch64-rc')
replaces=('linux-armv8')
backup=("etc/mkinitcpio.d/${pkgname}.preset")
install=${pkgname}.install

source=("https://beta.armbian.com/pool/main/l/linux-${_kv}-rockchip64/${_imagename}"
        'https://github.com/hanwckf/build-beikeyun/raw/v2019-9-16-1/dtbs/4.4-bsp/headless/rk3328-beikeyun.dtb'
        'linux-aarch64.preset'
        '60-linux-aarch64.hook'
        '90-linux-aarch64.hook'
        'linux-aarch64-beikeyun-p1.install')
sha256sums=('c998685b60901554f93f8c2dc3fdd22b85af76cff231ebd1bad8bf6d9ff8c72f'
            'e8d507c76513fc70b50a0a3a90cb43003fab95e3eb842b6f017b4e346e60da8a'
            'ff1c5a5ca92fb230aa35f3633a8cdcdc3b021e2c899c21a697550c46442ce695'
            '6e5459a508d26fd96ac8f675a537f21ab3a2624adc1e99ee64944b2db4c911f5'
            'ece886d2313bc47934c5782c8ff6034348cf2ff38ad2f3fdbabef592fc8d54eb'
            '6ba05007d802a41b0bd6272c71acb99948106ef5e10461fcc1c22fda9c824d43')
noextract=("${_imagename}")


prepare() {
  cd "${srcdir}"

  # extract the prebuilt kernel files
  ar xf "${_imagename}"
  tar -xf data.tar.xz
}

package() {
  cd "${srcdir}"

  # copy boot files  
  cp -r boot "${pkgdir}/boot"
  cd ${pkgdir}/boot
  touch .next
  ln -sf `ls vmlinu*` Image
  ln -sf /usr/lib/linux-image-legacy-rockchip64 dtb
  cd "${srcdir}"
  
  #install dtb file for Beikeyun P1
  install -D -m644 "${srcdir}/rk3328-beikeyun.dtb" "${pkgdir}/boot/rk3328-beikeyun.dtb"

  # copy kernel files
  mkdir -p "${pkgdir}/usr"
  mkdir -p "${pkgdir}/lib"
  cp -r usr "${pkgdir}/"
  cp -r lib "${pkgdir}/"
  
  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
    -i "${startdir}/${pkgname}.install"

  # install mkinitcpio preset file for kernel
  install -D -m644 "${srcdir}/linux-aarch64.preset" "${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset"
  sed \
    -e "1s|'linux.*'|'${pkgname}'|" \
    -e "s|ALL_kver=.*|ALL_kver=\"${_kernver}\"|" \
    -i "${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset"

  # install pacman hook for initramfs regeneration
  install -D -m644 "${srcdir}/60-linux-aarch64.hook" "${pkgdir}/usr/share/libalpm/hooks/60-${pkgname}.hook"
  install -D -m644 "${srcdir}/90-linux-aarch64.hook" "${pkgdir}/usr/share/libalpm/hooks/90-${pkgname}.hook"
  sed "s|%PKGNAME%|${pkgname}|g" -i "${pkgdir}/usr/share/libalpm/hooks/60-${pkgname}.hook"
  sed "s|%PKGVER%|${_kernver}|g" -i "${pkgdir}/usr/share/libalpm/hooks/60-${pkgname}.hook"
  sed "s|%PKGNAME%|${pkgname}|g" -i "${pkgdir}/usr/share/libalpm/hooks/90-${pkgname}.hook"

  # Now we call depmod...
  depmod -b "$pkgdir" -F "boot/System.map-${_kernver}" "$_kernver"

  # move module tree /lib -> /usr/lib
  mkdir -p "${pkgdir}/usr"
  cp -r "$pkgdir/lib" "$pkgdir/usr"
  rm -rf "$pkgdir/lib"

}

